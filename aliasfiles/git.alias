#!/usr/bin/env bash

                     ######################
                     ## ALIASES  FOR GIT ##
                     ######################
##################################################################
#                 Created by: Mitchell Woodbine                  #
#                   mitchellwoodbine@gmail.com                   #
#               https://github.com/vindennl48/mybash             #
##################################################################

#edit git cheat file
alias cheat_git="vim ~/bin/mybash/cheatfiles/gitcheat"

## prelim aliases ##
#######################################################################
#get the current branch name
alias branch-name="git rev-parse --abbrev-ref HEAD"

## useful aliases ##
#######################################################################
#show local and remote branches
alias showa="git branch -a"
#show local branches
alias show="git branch"
#go to branch
alias goto="git checkout"
#show status
alias stat="git status"
#show log
alias glog="git log"
#show commit gui
alias giti="git citool"
alias git-gui="git citool"

#create new branch
alias gnew="git checkout -b"
#create new orphan branch (no commits)
gnewempty() {
    git checkout --orphan $1; git rm -rf .
}

#create and drop stash, used for being able to switch branches
alias stash="git stash; git stash drop"

#push up to remotes
alias gpush="git push -u origin $(branch-name)"
#function to merge current branch with another branch and push that branch
gpushto(){ # <branch to merge into>
    bname=$(branch-name)
    git checkout $1
    git merge $bname
    git push origin $1
    git checkout $bname
}
#pull from remotes
alias gpull="git pull -u origin $(branch-name)"
#fetch from remotes
alias gfetch="git fetch -p origin"

# ADD COMMIT AND PUSH
#####################
#staging a file
alias gadd="git add"
#add files and create commit
gac(){
    git add $@
    git commit
}
#unstage files
alias gdrop="git reset"
#commit
alias gcom="git commit"



#####################

#delete local branch
deletelocal() {
    git branch -D $1
}
#delete remote branch
deleteremote() {
    git push $1 --delete $2
}
#delete local and remote branches
deleteall() {
    deletelocal $2; deleteremote $1 $2;
}

#clone from repository, make sure you have ssh set up
#enter your repo as an argument
clone() {
    git clone git@github.com:vindennl48/$1.git
}
#This is for non-ssh 
#enter user and repo
cloneh() {
    git clone https://github.com/$1/$2
}

