#Startup Script
#######################
# run-shell 'open_dotfiles.sh'

#######################
## BINDINGS FOR TMUX ##
#######################

# set colors for status bar
set-option -g status-bg "#84aae8"
set-option -g status-fg "#253b5e"

# set length of file name
set-option -g status-left-length 50
# set output of right side of status bar
set-option -g status-right " #(date '+%a, %b %d - %I:%M') "

# set tabs to start from 1 instead of 0
set-option -g base-index 1
set-option -g renumber-windows on

# break current pane to new window
bind-key b break-pane -d

# use mouse with tmux
set -g mouse on

# options
set -g default-terminal "tmux-256color"
set -ga terminal-overrides ",*256col*:Tc"

# Switch binding from Ctrl-b to Ctrl-a
unbind C-b
set-option -g prefix C-a
bind-key C-a send-prefix

# re-source file
bind-key r source-file ~/.tmux.conf \; display-message "~/.tmux.conf reloaded"

# prevent detaching
# unbind ^z

# create new window
bind-key ^c new-window
# create new window with same path as current window
bind-key c new-window -c '#{pane_current_path}'

# switch to next window
bind-key ^n next-window

# switch between sessions
# bind-key ^j choose-tree
bind C-j split-window -v "tmux list-sessions | sed -E 's/:.*$//' | grep -v \"^$(tmux display-message -p '#S')\$\" | fzf --reverse | xargs tmux switch-client -t"

# resize panes
bind-key -r H resize-pane -L 5
bind-key -r J resize-pane -D 5
bind-key -r K resize-pane -U 5
bind-key -r L resize-pane -R 5

## FZF ##
bind-key -n ^f split-window -v -p 20 fzf

#####################
# NON-PREFIX BINDINGS
#####################
# split horizontal
bind-key -n ^y split-window -h
# split vertical
bind-key -n ^x split-window -v
# zoom into selected pane
bind-key -n ^z resize-pane -Z
#####################
#####################

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"

unbind-key -T copy-mode    C-h
unbind-key -T copy-mode-vi C-h
unbind-key -T copy-mode    C-j
unbind-key -T copy-mode-vi C-j
unbind-key -T copy-mode    C-k
unbind-key -T copy-mode-vi C-k
unbind-key -T copy-mode    C-l
unbind-key -T copy-mode-vi C-l

bind-key -T copy-mode    C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -T copy-mode-vi C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -T copy-mode    C-h if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -T copy-mode-vi C-h if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -T copy-mode    C-h if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -T copy-mode-vi C-h if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -T copy-mode    C-h if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -T copy-mode-vi C-h if-shell "$is_vim" "send-keys C-l"  "select-pane -R"

# Prompted join-pane
bind-key j command-prompt -p "join pane from: "  "join-pane -h -s '%%'"

# Easily swap a pane (targeted by pane number) with the current pane
bind-key s display-panes\; command-prompt -p "pane #: "  "swap-pane -t '%%'"

# break window to a new tmux session
bind-key C-b send-keys 'tat && exit' 'C-m'

# kill current session and move to next
bind-key C-k run-shell 'tmux switch-client -n \; kill-session -t "$(tmux display-message -p "#S")" || tmux kill-session'

# when detatching from tmux, exit terminal
bind-key ^d detach-client\; run-shell 'exit'

# remove wait time on esc key
set -sg escape-time 10

# Plugin Tmux Resurect
run-shell ~/bin/repos/tmux-resurrect/resurrect.tmux
