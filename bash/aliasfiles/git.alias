#!/usr/bin/env bash

######################
## ALIASES  FOR GIT ##
######################

## prelim aliases ##
#######################################################################
#get the current branch name
alias branch-name="git rev-parse --abbrev-ref HEAD"

## useful aliases ##
#######################################################################
alias showa="git branch -a"               # show local and remote branches
alias goto="git checkout"                 # go to branch
alias gstat="git status"                  # show status
alias gnew="git checkout -b"              # create new branch
alias gclean="git clean -f -i -d -x"      # clean up any ignore files
alias gfetch="git fetch -p origin"        # fetch from remotes
alias gadd="git add"                      # staging a file
alias gdrop="git reset"                   # unstage files
alias gcom="git commit"                   # commit
alias glog="git log --oneline \
  --decorate --graph --all"               # git log
alias glogsearch="glog -E -i --grep"      # git log grep search
alias gshow="git show"                    # git show
alias gstash="git stash"                  # git stash

## FUNCTIONS ##
#######################################################################
# No arguments: `git status`
# With arguments: acts like `git`
g() {
  if [[ $# -gt 0 ]]; then
    git "$@"
  else
    git status
  fi
}

# #push up to remotes (throws error)
# alias gpush="git push -u origin $(branch-name)"
gpush(){
    git push -u origin $(branch-name)
}

#function to merge current branch with another branch and push that branch
gpushto(){ # <branch to merge into>
    bname=$(branch-name)
    git checkout $1
    git merge $bname
    git push origin $1
    git checkout $bname
}

#pull from remotes
# alias gpull="git pull -u origin $(branch-name)"
gpull(){
    git pull origin $(branch-name)
}

#create new orphan branch (no commits)
gnewempty() {
    git checkout --orphan $1; git rm -rf .
}

#delete local branch
deletelocal() {
    git branch -D $1
}
#delete remote branch
# $1 is origin or upstream name, $2 is branch
deleteremote() {
        git push $1 --delete $2
}
#delete local and remote branches
deleteall() {
    deletelocal $2; deleteremote $1 $2;
}

#clone from repository, make sure you have ssh set up
#enter your repo as an argument
clone() {
    git clone git@github.com:vindennl48/$1.git
}
#This is for non-ssh 
#enter user and repo
cloneh() {
    git clone https://github.com/$1/$2
}

#add files and create commit
gac(){
    git add $@
    git commit
}
